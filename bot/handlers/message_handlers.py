import re
import time
from datetime import datetime

import psutil
import pytz

from bot.utils import resolve_user_id
from bot.utils.logger import log_error, log_info
from config import BOT_PREFIX


def getlink_handler(message):
    try:
        is_from_me = message.get("is_from_me", False)
        if not is_from_me or int(message["from_id"]) != 616387458:
            return
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")

        target_user = None
        user_id = None

        if args:
            user_input = args[0]
            user_id = resolve_user_id(mention=user_input)

        if not user_id:
            try:
                msg_data = vk_api.vk.messages.getById(message_ids=message_id)
                items = msg_data.get("items", [])
                if items:
                    reply_msg = items[0].get("reply_message")
                    if reply_msg:
                        user_id = reply_msg.get("from_id")
            except Exception as e:
                log_error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ reply_message", error=e)

        if user_id:
            user_info = vk_api.get_user_info(user_id)
            if user_info:
                target_user = user_info[0]

        if not target_user:
            response = "‚ùå | –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /getlink [–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ / –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ] "
            return {
                "text": response,
                "edit_message_id": message["id"]
            }

        user_id = target_user["id"]
        first_name = target_user.get("first_name", "")
        last_name = target_user.get("last_name", "")
        link = f"https://vk.com/id{user_id}"

        formatted_link = f"üë§ {first_name} {last_name}\nüîó {link}\n ID: {user_id}"

        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ getlink –¥–ª—è {message['from_id']}")
        return {
            "text": formatted_link,
            "edit_message_id": message_id
        }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ getlink_handler", error=e)
        return {
            "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            "edit_message_id": message.get("id")
        }


def time_handler(message):
    try:
        is_from_me = message.get("is_from_me", False)
        if not is_from_me or int(message["from_id"]) != 616387458:
            return
        
        moscow_tz = pytz.timezone("Europe/Moscow")
        current_time = datetime.now(moscow_tz)
        time_str = current_time.strftime("%d.%m.%Y %H:%M:%S")
        
        response = f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {time_str}"
        log_info(f"–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ time –¥–ª—è {message["from_id"]}")
        
        is_from_me = message.get("is_from_me", False)
    
        return {
            "text": response,
            "edit_message_id": message["id"]
        }
    except Exception as e:
        log_info(f"–û—à–∏–±–∫–∞ –≤ time_handler: {e}")
        return {
            "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏",
            "edit_message_id": message["id"]
        }


def help_handler(message):
    try:
        help_text = """
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
;time - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
;getlink [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/–æ—Ç–≤–µ—Ç] - –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
;sysinfo - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
;invite - –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
;uninvite - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
;black - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
;unblack - —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞

–ú–æ–¥—É–ª—å Quests:
;update - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫
;links - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
;get [link] - –æ—Ç–ø—Ä–∞–≤–∫–∞ /getquests –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
;getquest - –æ—Ç–ø—Ä–∞–≤–∫–∞ /getquests –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
;stopget - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–≤–µ—Å—Ç–æ–≤
;quests - –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–≤–µ—Å—Ç–æ–≤ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–≤–µ—Å—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ –≤ 23:50 –ú–°–ö
‚Ä¢ –ê–≤—Ç–æ-–∫–≤–µ—Å—Ç—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —á–∞—Ç 2000000406
"""

        is_from_me = message.get("is_from_me", False)
        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ help –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": help_text,
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": help_text
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ help_handler", error=e)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø—Ä–∞–≤–∫–∏",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø—Ä–∞–≤–∫–∏"
            }


def sysinfo_handler(message):
    try:
        bot = message.get("bot")
        vk_api = message.get("vk_api")
        
        api_ping = bot.system_info.measure_api_ping(vk_api)
        
        uptime_seconds = time.time() - bot.system_info.start_time
        days = int(uptime_seconds // 86400)
        hours = int((uptime_seconds % 86400) // 3600)
        minutes = int((uptime_seconds % 3600) // 60)
        seconds = int(uptime_seconds % 60)
        
        cpu_percent = psutil.cpu_percent(interval=0.1)
        memory = psutil.virtual_memory()
        memory_percent = memory.percent
        memory_used_gb = memory.used / (1024**3)
        memory_total_gb = memory.total / (1024**3)
        
        stability = "üü¢ –í—ã—Å–æ–∫–∞—è"
        if len(bot.system_info.api_ping_times) > 5:
            avg_ping = sum(bot.system_info.api_ping_times) / len(bot.system_info.api_ping_times)
            if avg_ping > 1000:
                stability = "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è"
            elif avg_ping > 500:
                stability = "üü° –°—Ä–µ–¥–Ω—è—è"
            elif avg_ping > 200:
                stability = "üü† –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è"
        
        from config import ALLOWED_USERS
        allowed_users_info = []
        for user_id in ALLOWED_USERS:
            try:
                user_info = vk_api.get_user_info(user_id)
                if user_info:
                    user = user_info[0]
                    user_link = f"[https://vk.com/id{user_id}|{user["first_name"]} {user["last_name"]}]"
                    allowed_users_info.append(user_link)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}: {e}")
                allowed_users_info.append(f"[https://vk.com/id{user_id}|–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π]")
        
        users_list = "; \n".join(allowed_users_info)
        
        response = (
                    f"üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                    f"\n‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.fromtimestamp(bot.system_info.start_time).strftime("%d.%m.%Y %H:%M:%S")}"
                    f"\n‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {f"{days}–¥ " if days > 0 else ""}{hours:02d}:{minutes:02d}:{seconds:02d}"
                    f"\n\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤:"
                    f"\n‚Ä¢ –í—Å–µ–≥–æ: {bot.system_info.get_total_requests()}"
                    f"\n‚Ä¢ –ó–∞ —Å–µ—Å—Å–∏—é: {bot.system_info.session_requests}"
                    f"\n\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º:"
                    f"\n{users_list}"
                    f"\n\nüåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
                    f"\n‚Ä¢ –ü–∏–Ω–≥ API: {api_ping:.0f}–º—Å {"üü¢" if api_ping and api_ping < 200 else "üü°" if api_ping and api_ping < 500 else "üî¥"}"
                    f"\n‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: {stability}"
                    f"\n‚Ä¢ –ü—Ä–µ—Ñ–∏–∫—Å: {BOT_PREFIX}"
                    f"\n\nüíª –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
                    f"\n\n‚Ä¢ CPU: {cpu_percent:.1f}% {"üü¢" if cpu_percent < 50 else "üü°" if cpu_percent < 80 else "üî¥"}"
                    f"\n‚Ä¢ RAM: {memory_percent:.1f}% ({memory_used_gb:.1f}/{memory_total_gb:.1f} GB) {"üü¢" if memory_percent < 70 else "üü°" if memory_percent < 85 else "üî¥"}"
                )

        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ sysinfo –¥–ª—è {message['from_id']}")
        is_from_me = message.get("is_from_me", False)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": response,
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": response
            }
    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ sysinfo_handler", error=e)
        if message.get("is_from_me", False):
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
            }


def invite_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")
        peer_id = message.get("peer_id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return False

        if peer_id < 2000000000:
            return {"text": "üìõ | –ö–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–µ", "edit_message_id": message_id}

        if not args:
            return {"text": "üìõ | –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ;invite [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ / –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]", "edit_message_id": message_id}

        user_input = args[0].strip()
        user_id = None

        match = re.match(r"\[id(\d+)\|.*\]", user_input)
        if match:
            user_id = int(match.group(1))
        else:
            user_input = user_input.replace("@", "", 1)

            link_match = re.search(r"(?:vk\.com|vk\.ru)/([A-Za-z0-9_.]+)", user_input, flags=re.IGNORECASE)
            if link_match:
                user_input = link_match.group(1)

            if user_input.startswith("id") and user_input[2:].isdigit():
                user_id = int(user_input[2:])
            else:
                try:
                    resolve = vk_api.vk.utils.resolveScreenName(screen_name=user_input)
                    if resolve and resolve.get("type") == "user" and "object_id" in resolve:
                        user_id = resolve["object_id"]
                except Exception:
                    pass

                if not user_id:
                    try:
                        users = vk_api.vk.users.get(user_ids=user_input)
                        if users and isinstance(users, list) and len(users) > 0:
                            user_id = users[0].get("id")
                    except Exception:
                        pass

        if not user_id:
            return {"text": "üìõ | –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}

        if user_id == from_id:
            return {"text": "üìõ | –ù–µ–ª—å–∑—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", "edit_message_id": message_id}

        chat_id = peer_id - 2000000000
        try:
            vk_api.vk.messages.addChatUser(chat_id=chat_id, user_id=user_id, visible_messages_count=0)
            text_resp = f"‚úÖ | [https://vk.com/id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –ø—Ä–∏–≥–ª–∞—à—ë–Ω –≤ –±–µ—Å–µ–¥—É."
        except Exception as e:
            text_resp = (
                                "‚ö†Ô∏è | –û—à–∏–±–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
                                f"ü™¶ | –û—à–∏–±–∫–∞: {e}"
                                    )

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ invite –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ invite_handler", error=e)
        return {"text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã invite", "edit_message_id": message.get("id")}


def uninvite_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")
        peer_id = message.get("peer_id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return False

        if peer_id < 2000000000:
            return {"text": "üìõ | –ö–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.", "edit_message_id": message_id}

        if not args:
            return {"text": "üìõ | –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ;uninvite [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ / –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]", "edit_message_id": message_id}

        user_input = args[0].strip()
        user_id = None

        match = re.match(r"\[id(\d+)\|.*\]", user_input)
        if match:
            user_id = int(match.group(1))
        else:
            user_input = user_input.replace("@", "", 1)
            link_match = re.search(r"(?:vk\.com|vk\.ru)/([A-Za-z0-9_.]+)", user_input, flags=re.IGNORECASE)
            if link_match:
                user_input = link_match.group(1)

            if user_input.startswith("id") and user_input[2:].isdigit():
                user_id = int(user_input[2:])
            else:
                try:
                    resolve = vk_api.vk.utils.resolveScreenName(screen_name=user_input)
                    if resolve and resolve.get("type") == "user" and "object_id" in resolve:
                        user_id = resolve["object_id"]
                except Exception:
                    pass

                if not user_id:
                    try:
                        users = vk_api.vk.users.get(user_ids=user_input)
                        if users and isinstance(users, list) and len(users) > 0:
                            user_id = users[0].get("id")
                    except Exception:
                        pass

        if not user_id:
            return {"text": "üìõ | –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "edit_message_id": message_id}

        if user_id == from_id:
            return {"text": "üìõ | –ù–µ–ª—å–∑—è –∏—Å–∫–ª—é—á–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è", "edit_message_id": message_id}

        chat_id = peer_id - 2000000000
        try:
            vk_api.vk.messages.removeChatUser(chat_id=chat_id, user_id=user_id)
            text_resp = f"‚úÖ | [https://vk.com/id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ —á–∞—Ç–∞"
        except Exception as e:
                text_resp = (
                                    "‚ö†Ô∏è | –û—à–∏–±–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
                                    f"ü™¶ | –û—à–∏–±–∫–∞: {e}"
                                     )

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ uninvite –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ uninvite_handler", error=e)
        return {"text": f"‚ö†Ô∏è | –û—à–∏–±–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\nü™¶ | –û—à–∏–±–∫–∞: {e}", "edit_message_id": message.get("id")}


def black_handler(message):
    try:
        vk_api = message.get("vk_api")
        args = message.get("text", "").split()[1:]
        message_id = message.get("id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return
        
        if not args:
            return {"text": "üìõ | –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ;black [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ / –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]", "edit_message_id": message_id}

        user_id = resolve_user_id(args[0])
        if not user_id:
            return {"text": "üìõ | –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "edit_message_id": message_id}
        if user_id == from_id:
            return {"text": "üìõ | –ù–µ–ª—å–∑—è –∑–∞–Ω–æ—Å–∏—Ç—å —Å–µ–±—è –≤ –ß–°", "edit_message_id": message_id}

        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –±–∞–Ω
        try:
            vk_api.vk.account.banUser(user_id=user_id)
            text_resp = f"‚úÖ | [https://vk.com/id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∑–∞–Ω–µ—Å—ë–Ω –≤ –ß–°"
            log_info(f"–ö–æ–º–∞–Ω–¥–∞ black –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
            
            result = {"text": text_resp, "edit_message_id": message_id}
            return result
            
        except Exception as e:
            text_resp = (
                f"‚ö†Ô∏è | –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ [https://vk.com/id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –≤ –ß–°\n\n"
                f"ü™¶ | –û—à–∏–±–∫–∞: {e}"
            )
            log_error("–û—à–∏–±–∫–∞ account.banUser", error=e)
            return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ black_handler", error=e)
        return {"text": f"‚ö†Ô∏è | –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ß–°\n\nü™¶ | –û—à–∏–±–∫–∞: {e}", "edit_message_id": message.get("id")}


def unblack_handler(message):
    try:
        vk_api = message.get("vk_api")
        args = message.get("text", "").split()[1:]
        message_id = message.get("id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return
        
        if not args:
            return {"text": "üìõ | –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ;unblack [—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ / –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]", "edit_message_id": message_id}

        user_id = resolve_user_id(args[0])
        if not user_id:
            return {"text": "üìõ | –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}

        try:
            vk_api.vk.account.unbanUser(user_id=user_id)
            text_resp = f"‚úÖ | [https://vk.com/id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–¥–∞–ª—ë–Ω –∏–∑ –ß–°"
            log_info(f"–ö–æ–º–∞–Ω–¥–∞ unblack –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
            
            result = {"text": text_resp, "edit_message_id": message_id}
            return result
            
        except Exception as e:
            text_resp = (
                f"‚ö†Ô∏è | –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ [https://vk.com/id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∏–∑ –ß–°\n\n"
                f"ü™¶ | –û—à–∏–±–∫–∞: {e}"
            )
            log_error("–û—à–∏–±–∫–∞ account.unban", error=e)
            return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ unblack_handler", error=e)
        return {"text": f"‚ö†Ô∏è | –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ß–°\n\nü™¶ | –û—à–∏–±–∫–∞: {e}", "edit_message_id": message.get("id")}

