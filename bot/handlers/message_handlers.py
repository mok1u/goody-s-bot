import json
import os
import re
import threading
import time
from datetime import datetime

import psutil
import pytz

from bot.utils import resolve_user_id
from bot.utils.logger import log_info, log_error
from config import BOT_PREFIX

def time_handler(message):
    try:
        moscow_tz = pytz.timezone("Europe/Moscow")
        current_time = datetime.now(moscow_tz)
        time_str = current_time.strftime("%d.%m.%Y %H:%M:%S")
        
        response = f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {time_str}"
        log_info(f"–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ time –¥–ª—è {message["from_id"]}")
        
        is_from_me = message.get("is_from_me", False)
        
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": response,
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": response
            }
    except Exception as e:
        log_info(f"–û—à–∏–±–∫–∞ –≤ time_handler: {e}")
        if message.get("is_from_me", False) or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏",
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏"
            }

def getlink_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")
        is_from_me = message.get("is_from_me", False) 

        target_user = None
        user_id = None

        if args:
            user_input = args[0]
            if user_input.startswith("[id") and "|" in user_input:
                user_id = user_input.split("|")[0][3:]

        if not user_id:
            try:
                msg_data = vk_api.vk.messages.getById(message_ids=message_id)
                items = msg_data.get("items", [])
                if items:
                    reply_msg = items[0].get("reply_message")
                    if reply_msg:
                        user_id = reply_msg.get("from_id")
            except Exception as e:
                log_error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ reply_message", error=e)

        if user_id:
            user_info = vk_api.get_user_info(user_id)
            if user_info:
                target_user = user_info[0]

        if not target_user:
            text_resp = "‚ùå –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /getlink [id123|name] –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ."
            if is_from_me or int(message["from_id"]) == 616387458:  
                return {"text": text_resp, "edit_message_id": message_id}
            else:
                return {"text": text_resp}

        user_id = target_user["id"]
        first_name = target_user.get("first_name", "")
        last_name = target_user.get("last_name", "")
        link = f"https://vk.com/id{user_id}"

        formatted_link = f"üë§ {first_name} {last_name}\nüîó {link}"

        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ getlink –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": formatted_link,
                "edit_message_id": message_id
            }
        else:
            return {
                "text": formatted_link
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ getlink_handler", error=e)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
            }

def update_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split("\n")[1:]
        message_id = message.get("id")
        is_from_me = message.get("is_from_me", False)
        
        if not args:
            if is_from_me or int(message["from_id"]) == 616387458:
                return {
                    "text": "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏",
                    "edit_message_id": message_id
                }
            else:
                return {
                    "text": "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏"
                }
        
        results = []
        valid_links = []
        
        for link in args:
            link = link.strip()
            if link.startswith("https://vk.com/id") and link[18:].isdigit():
                user_id = link[17:]
                user_info = vk_api.get_user_info(user_id)
                
                if user_info and len(user_info) > 0:
                    user = user_info[0]
                    first_name = user.get("first_name", "")
                    last_name = user.get("last_name", "")
                    if str(user["id"]) == user_id:
                        results.append(f"‚úÖ {first_name} {last_name} - {link}")
                        valid_links.append(link)
                    else:
                        results.append(f"‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ ID - {link}")
                else:
                    results.append(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω - {link}")
            else:
                results.append(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç - {link}")
        
        if valid_links:
            with open("links.txt", "w", encoding="utf-8") as f:
                for link in valid_links:
                    f.write(link + "\n")
        
        response_text = "–†–µ–∑—É–ª—å—Ç–∞—Ç:\n" + "\n".join(results)
        
        if valid_links:
            response_text += f"\n\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {len(valid_links)}"
        
        log_info(f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ update –¥–ª—è {message["from_id"]}")
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": response_text,
                "edit_message_id": message_id
            }
        else:
            return {
                "text": response_text
            }
        
    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ update_handler", error=e)
        if message.get("is_from_me", False) or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ"
            }

def links_handler(message):
    try:
        message_id = message.get("id")
        is_from_me = message.get("is_from_me", False)
        
        try:
            with open("links.txt", "r", encoding="utf-8") as f:
                links = f.read().strip().split("\n")
        except FileNotFoundError:
            if is_from_me:
                return {
                    "text": "üì≠ –§–∞–π–ª c —Å—Å—ã–ª–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    "edit_message_id": message_id
                }
            else:
                return {
                    "text": "üì≠ –§–∞–π–ª c —Å—Å—ã–ª–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
                }
        
        if not links or links == [""]:
            if is_from_me or int(message["from_id"]) == 616387458:
                return {
                    "text": "üì≠ –°—Å—ã–ª–æ–∫ –Ω–µ—Ç",
                    "edit_message_id": message_id
                }
            else:
                return {
                    "text": "üì≠ –°—Å—ã–ª–æ–∫ –Ω–µ—Ç"
                }
        
        links_list = []
        for i, link in enumerate(links, 1):
            if link.strip():
                links_list.append(f"{i}. {link.strip()}")
        
        response_text = "üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n" + "\n".join(links_list)
        log_info(f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ links –¥–ª—è {message["from_id"]}")
        if len(response_text) > 4000:
            response_text = "üìã –°—Å—ã–ª–æ–∫ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        
        if is_from_me:
            return {
                "text": response_text,
                "edit_message_id": message_id
            }
        else:
            return {
                "text": response_text
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ links_handler", error=e)
        if message.get("is_from_me", False) or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞"
            }

def get_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        peer_id = message.get("peer_id")
        message_id = message.get("id")
        is_from_me = message.get("is_from_me", False)
        
        if not args:
            if is_from_me:
                return {
                    "text": "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É: ;get [link]",
                    "edit_message_id": message_id
                }
            else:
                return {
                    "text": "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É: ;get [link]"
                }
        
        link = args[0]
        
        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ get –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            vk_api.delete_message(peer_id=peer_id, message_ids=message_id)
        
        vk_api.send_message(
            peer_id=peer_id,
            message=f"/getquests {link}"
        )
        
        return None

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ get_handler", error=e)
        if message.get("is_from_me", False) or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã"
            }

def getquest_handler(message):
    try:
        vk_api = message.get("vk_api")
        peer_id = message.get("peer_id")
        message_id = message.get("id")
        bot = message.get("bot")
        
        bot.stop_quests = False
        
        def send_quests():
            try:
                with open("links.txt", "r", encoding="utf-8") as f:
                    links = [link.strip() for link in f.readlines() if link.strip()]
                
                if not links:
                    return
                
                bot.quest_event_handler.clear_quests()
                
                for link in links:
                    if bot.stop_quests:
                        vk_api.send_message(peer_id=peer_id, message="‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                        return
                    
                    bot.quest_event_handler.add_pending_quest(peer_id, link)
                    
                    message_text = f"/getquests {link}"
                    vk_api.send_message(peer_id=peer_id, message=message_text)
                    
                    time.sleep(1)
                    
            except Exception as e:
                log_error("–û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–≤–µ—Å—Ç–æ–≤", error=e)

        is_from_me = message.get("is_from_me", False)
        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ getquest –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            vk_api.edit_message(
                peer_id=peer_id,
                message_id=message_id,
                message="‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–≤–µ—Å—Ç—ã..."
            )
        
        thread = threading.Thread(target=send_quests)
        thread.daemon = True
        thread.start()
        
        return None

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ getquest_handler", error=e)
        is_from_me = message.get("is_from_me", False)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã"
            }

def stopget_handler(message):
    try:
        bot = message.get("bot")
        message_id = message.get("id")
        
        bot.stop_quests = True
        is_from_me = message.get("is_from_me", False)

        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ stopget –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                "edit_message_id": message_id
            }
        else:
            return {
                "text": "‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ stopget_handler", error=e)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ"
            }
        
def help_handler(message):
    try:
        help_text = """üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

‚è∞ ;time - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ –ú–°–ö
üîó ;getlink [id123|name] - –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
üìù ;update - –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ (—É–∫–∞–∑–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)
üìã ;links - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
üéØ ;get [link] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /getquests –¥–ª—è –æ–¥–Ω–æ–π —Å—Å—ã–ª–∫–∏
üöÄ ;getquest - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /getquests –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
‚èπÔ∏è ;stopget - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∫–≤–µ—Å—Ç–æ–≤
üìù ;quests - –∫–≤–µ—Å—Ç—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ñ–∏–∫—Å–∞—Ü–∏–∏
‚ÑπÔ∏è ;sysinfo - –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞

ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∫–∞:
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 23:50 –ú–°–ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–≤–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
‚Ä¢ –ê–≤—Ç–æ-–∫–≤–µ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —á–∞—Ç 2000000406
"""

        is_from_me = message.get("is_from_me", False)
        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ help –¥–ª—è {message['from_id']}")
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": help_text,
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": help_text
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ help_handler", error=e)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø—Ä–∞–≤–∫–∏",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø—Ä–∞–≤–∫–∏"
            }

def sysinfo_handler(message):
    try:
        bot = message.get("bot")
        vk_api = message.get("vk_api")
        
        api_ping = bot.system_info.measure_api_ping(vk_api)
        
        uptime_seconds = time.time() - bot.system_info.start_time
        days = int(uptime_seconds // 86400)
        hours = int((uptime_seconds % 86400) // 3600)
        minutes = int((uptime_seconds % 3600) // 60)
        seconds = int(uptime_seconds % 60)
        
        cpu_percent = psutil.cpu_percent(interval=0.1)
        memory = psutil.virtual_memory()
        memory_percent = memory.percent
        memory_used_gb = memory.used / (1024**3)
        memory_total_gb = memory.total / (1024**3)
        
        stability = "üü¢ –í—ã—Å–æ–∫–∞—è"
        if len(bot.system_info.api_ping_times) > 5:
            avg_ping = sum(bot.system_info.api_ping_times) / len(bot.system_info.api_ping_times)
            if avg_ping > 1000:
                stability = "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è"
            elif avg_ping > 500:
                stability = "üü° –°—Ä–µ–¥–Ω—è—è"
            elif avg_ping > 200:
                stability = "üü† –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è"
        
        from config import ALLOWED_USERS
        allowed_users_info = []
        for user_id in ALLOWED_USERS:
            try:
                user_info = vk_api.get_user_info(user_id)
                if user_info:
                    user = user_info[0]
                    user_link = f"[id{user_id}|{user["first_name"]} {user["last_name"]}]"
                    allowed_users_info.append(user_link)
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}: {e}")
                allowed_users_info.append(f"[id{user_id}|–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π]")
        
        users_list = "; \n".join(allowed_users_info)
        
        response = (
                    f"üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                    f"\n‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.fromtimestamp(bot.system_info.start_time).strftime("%d.%m.%Y %H:%M:%S")}"
                    f"\n‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {f"{days}–¥ " if days > 0 else ""}{hours:02d}:{minutes:02d}:{seconds:02d}"
                    f"\n\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤:"
                    f"\n‚Ä¢ –í—Å–µ–≥–æ: {bot.system_info.get_total_requests()}"
                    f"\n‚Ä¢ –ó–∞ —Å–µ—Å—Å–∏—é: {bot.system_info.session_requests}"
                    f"\n\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º:"
                    f"\n{users_list}"
                    f"\n\nüåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
                    f"\n‚Ä¢ –ü–∏–Ω–≥ API: {api_ping:.0f}–º—Å {"üü¢" if api_ping and api_ping < 200 else "üü°" if api_ping and api_ping < 500 else "üî¥"}"
                    f"\n‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: {stability}"
                    f"\n‚Ä¢ –ü—Ä–µ—Ñ–∏–∫—Å: {BOT_PREFIX}"
                    f"\n\nüíª –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
                    f"\n\n‚Ä¢ CPU: {cpu_percent:.1f}% {"üü¢" if cpu_percent < 50 else "üü°" if cpu_percent < 80 else "üî¥"}"
                    f"\n‚Ä¢ RAM: {memory_percent:.1f}% ({memory_used_gb:.1f}/{memory_total_gb:.1f} GB) {"üü¢" if memory_percent < 70 else "üü°" if memory_percent < 85 else "üî¥"}"
                )

        log_info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ sysinfo –¥–ª—è {message['from_id']}")
        is_from_me = message.get("is_from_me", False)
        if is_from_me or int(message["from_id"]) == 616387458:
            return {
                "text": response,
                "edit_message_id": message["id"]
            }
        else:
            return {
                "text": response
            }
    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ sysinfo_handler", error=e)
        if message.get("is_from_me", False):
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
            }

def quests_handler(message):
    try:
        vk_api = message.get("vk_api")
        message_id = message.get("id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)
        file_path = "quests.json"

        if not os.path.exists(file_path):
            text_resp = "‚ùå –§–∞–π–ª quests.json –Ω–µ –Ω–∞–π–¥–µ–Ω."
            if is_from_me or from_id == 616387458:
                return {"text": text_resp, "edit_message_id": message_id}
            else:
                return {"text": text_resp}

        with open(file_path, "r", encoding="utf-8") as f:
            quests_data = json.load(f)

        if not quests_data:
            text_resp = "‚ö†Ô∏è –ö–≤–µ—Å—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç."
            if is_from_me or from_id == 616387458:
                return {"text": text_resp, "edit_message_id": message_id}
            else:
                return {"text": text_resp}

        response_lines = ["üìã –°–ø–∏—Å–æ–∫ –∫–≤–µ—Å—Ç–æ–≤:\n"]

        for user_id, quests in quests_data.items():
            count = len(quests)

            try:
                user_info = vk_api.get_user_info(user_id)
                if user_info and len(user_info) > 0:
                    user = user_info[0]
                    first_name = user.get("first_name", "")
                    last_name = user.get("last_name", "")
                    name_link = f"[id{user_id}|{first_name} {last_name}]"
                    response_lines.append(f"üë§ {name_link} ‚Äî {count} –∫–≤–µ—Å—Ç(–æ–≤):")
                else:
                    response_lines.append(f"üë§ [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] ‚Äî {count} –∫–≤–µ—Å—Ç(–æ–≤):")
            except Exception as e:
                log_error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}", error=e)
                response_lines.append(f"üë§ [id{user_id}|–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] ‚Äî {count} –∫–≤–µ—Å—Ç(–æ–≤):")

            if count > 0:
                for q in quests:
                    qid = q.get("id", "‚Äî")
                    status = q.get("status", "‚Äî")
                    comment = q.get("comment", "")
                    response_lines.append(f"    üÜî {qid} | –°—Ç–∞—Ç—É—Å: {status} | üí¨ {comment}")

            response_lines.append("") 

        response_text = "\n".join(response_lines).strip()

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ quests –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id}")

        if is_from_me or from_id == 616387458:
            return {
                "text": response_text,
                "edit_message_id": message_id
            }
        else:
            return {
                "text": response_text
            }

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ quests_handler", error=e)
        if message.get("is_from_me", False) or int(message.get("from_id")) == 616387458:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–µ—Å—Ç–æ–≤",
                "edit_message_id": message.get("id")
            }
        else:
            return {
                "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–≤–µ—Å—Ç–æ–≤"
            }

def invite_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")
        peer_id = message.get("peer_id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return {"text": "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."}

        if peer_id < 2000000000:
            return {"text": "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.", "edit_message_id": message_id}

        if not args:
            return {"text": "‚ùå –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /invite [—Å—Å—ã–ª–∫–∞|id|@username]", "edit_message_id": message_id}

        user_input = args[0].strip()
        user_id = None

        match = re.match(r"\[id(\d+)\|.*\]", user_input)
        if match:
            user_id = int(match.group(1))
        else:
            user_input = user_input.replace("@", "", 1)

            link_match = re.search(r"(?:vk\.com|vk\.ru)/([A-Za-z0-9_.]+)", user_input, flags=re.IGNORECASE)
            if link_match:
                user_input = link_match.group(1)

            if user_input.startswith("id") and user_input[2:].isdigit():
                user_id = int(user_input[2:])
            else:
                try:
                    resolve = vk_api.vk.utils.resolveScreenName(screen_name=user_input)
                    if resolve and resolve.get("type") == "user" and "object_id" in resolve:
                        user_id = resolve["object_id"]
                except Exception:
                    pass

                if not user_id:
                    try:
                        users = vk_api.vk.users.get(user_ids=user_input)
                        if users and isinstance(users, list) and len(users) > 0:
                            user_id = users[0].get("id")
                    except Exception:
                        pass

        if not user_id:
            return {"text": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}

        if user_id == from_id:
            return {"text": "‚ùå –ù–µ–ª—å–∑—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", "edit_message_id": message_id}

        chat_id = peer_id - 2000000000
        try:
            vk_api.vk.messages.addChatUser(chat_id=chat_id, user_id=user_id)
            text_resp = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{user_id}|–ø—Ä–∏–≥–ª–∞—à—ë–Ω] –≤ –±–µ—Å–µ–¥—É."
        except Exception as e:
            error_message = str(e)
            if "925" in error_message:
                text_resp = f"‚ùå [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∑–∞–ø—Ä–µ—Ç–∏–ª –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å —Å–µ–±—è –≤ –±–µ—Å–µ–¥—ã."
            elif "15" in error_message or "935" in error_message:
                text_resp = "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç—É –±–µ—Å–µ–¥—É."
            elif "already" in error_message.lower():
                text_resp = f"‚ö†Ô∏è [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–µ—Å–µ–¥–µ."
            else:
                text_resp = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]."
            log_error("–û—à–∏–±–∫–∞ addChatUser", error=e)

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ invite –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ invite_handler", error=e)
        return {"text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã invite", "edit_message_id": message.get("id")}
    
def uninvite_handler(message):
    try:
        vk_api = message.get("vk_api")
        text = message.get("text", "").strip()
        args = text.split()[1:]
        message_id = message.get("id")
        peer_id = message.get("peer_id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return {"text": "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."}

        if peer_id < 2000000000:
            return {"text": "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ.", "edit_message_id": message_id}

        if not args:
            return {"text": "‚ùå –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /uninvite [—Å—Å—ã–ª–∫–∞|id|@username]", "edit_message_id": message_id}

        user_input = args[0].strip()
        user_id = None

        match = re.match(r"\[id(\d+)\|.*\]", user_input)
        if match:
            user_id = int(match.group(1))
        else:
            user_input = user_input.replace("@", "", 1)
            link_match = re.search(r"(?:vk\.com|vk\.ru)/([A-Za-z0-9_.]+)", user_input, flags=re.IGNORECASE)
            if link_match:
                user_input = link_match.group(1)

            if user_input.startswith("id") and user_input[2:].isdigit():
                user_id = int(user_input[2:])
            else:
                try:
                    resolve = vk_api.vk.utils.resolveScreenName(screen_name=user_input)
                    if resolve and resolve.get("type") == "user" and "object_id" in resolve:
                        user_id = resolve["object_id"]
                except Exception:
                    pass

                if not user_id:
                    try:
                        users = vk_api.vk.users.get(user_ids=user_input)
                        if users and isinstance(users, list) and len(users) > 0:
                            user_id = users[0].get("id")
                    except Exception:
                        pass

        if not user_id:
            return {"text": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}

        if user_id == from_id:
            return {"text": "‚ùå –ù–µ–ª—å–∑—è –∏—Å–∫–ª—é—á–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.", "edit_message_id": message_id}

        chat_id = peer_id - 2000000000
        try:
            vk_api.vk.messages.removeChatUser(chat_id=chat_id, user_id=user_id)
            text_resp = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{user_id}|—É–¥–∞–ª–µ–Ω] –∏–∑ –±–µ—Å–µ–¥—ã."
        except Exception as e:
            error_message = str(e)
            if "15" in error_message or "935" in error_message:
                text_resp = "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —ç—Ç–æ–π –±–µ—Å–µ–¥—ã."
            elif "already" in error_message.lower() or "member not found" in error_message.lower():
                text_resp = f"‚ö†Ô∏è [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–∂–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–µ—Å–µ–¥–µ."
            else:
                text_resp = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]."
            log_error("–û—à–∏–±–∫–∞ removeChatUser", error=e)

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ uninvite –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ uninvite_handler", error=e)
        return {"text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã uninvite", "edit_message_id": message.get("id")}

def black_handler(message):
    try:
        vk_api = message.get("vk_api")
        args = message.get("text", "").split()[1:]
        message_id = message.get("id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return {"text": "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."}
        if not args:
            return {"text": "‚ùå –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /black [—Å—Å—ã–ª–∫–∞|id|@username]", "edit_message_id": message_id}

        user_id = resolve_user_id(vk_api, args[0])
        if not user_id:
            return {"text": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}
        if user_id == from_id:
            return {"text": "‚ùå –ù–µ–ª—å–∑—è –∑–∞–Ω–æ—Å–∏—Ç—å —Å–µ–±—è –≤ –ß–°.", "edit_message_id": message_id}

        try:
            vk_api.vk.account.banUser(user_id=user_id)
            text_resp = f"‚úÖ [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∑–∞–Ω–µ—Å—ë–Ω –≤ –ß–° –í–ö–æ–Ω—Ç–∞–∫—Ç–µ."
        except Exception as e:
            text_resp = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –≤ –ß–°."
            log_error("–û—à–∏–±–∫–∞ account.banUser", error=e)

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ black –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ black_handler", error=e)
        return {"text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã black", "edit_message_id": message.get("id")}

def unblack_handler(message):
    try:
        vk_api = message.get("vk_api")
        args = message.get("text", "").split()[1:]
        message_id = message.get("id")
        from_id = int(message.get("from_id"))
        is_from_me = message.get("is_from_me", False)

        if not (is_from_me or from_id == 616387458):
            return {"text": "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."}
        if not args:
            return {"text": "‚ùå –£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /unblack [—Å—Å—ã–ª–∫–∞|id|@username]", "edit_message_id": message_id}

        user_id = resolve_user_id(vk_api, args[0])
        if not user_id:
            return {"text": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "edit_message_id": message_id}

        try:
            vk_api.vk.account.unbanUser(user_id=user_id)
            text_resp = f"‚úÖ [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–¥–∞–ª—ë–Ω –∏–∑ –ß–° –í–ö–æ–Ω—Ç–∞–∫—Ç–µ."
        except Exception as e:
            text_resp = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∏–∑ –ß–°."
            log_error("–û—à–∏–±–∫–∞ account.unbanUser", error=e)

        log_info(f"–ö–æ–º–∞–Ω–¥–∞ unblack –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {from_id} ‚Üí {user_id}")
        return {"text": text_resp, "edit_message_id": message_id}

    except Exception as e:
        log_error("–û—à–∏–±–∫–∞ –≤ unblack_handler", error=e)
        return {"text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã unblack", "edit_message_id": message.get("id")}
